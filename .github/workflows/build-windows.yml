name: build-windows
on: 
  workflow_dispatch:
    inputs:
      os:
        type: choice
        description: Select a Windows version
        default: windows-2022
        required: true
        options: 
          - windows-latest
          - windows-2025
          - windows-2022

      runtime:
        type: choice
        description: Select runtime package
        required: true
        default: compiled runtime
        options:
          - compiled runtime
          - compiled runtime + precompiled stdlib
          - downloaded windows embeddable package

env:
  TARGET: "core-windows-pkg"

jobs:
  build:
    runs-on: ${{ inputs.os }}

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    # - name: build windows python3 externals
    #   if: ${{ inputs.runtime == 'compiled runtime' }} 
    #   run: |
    #     make ${{ env.TARGET }}
    #     cmake -P source/scripts/cmake/win_pkg_cleanup.cmake

    # - name: build windows python3 externals (precompiled stdlib)
    #   if: ${{ inputs.runtime == 'compiled runtime + precompiled stdlib' }} 
    #   run: |
    #     make ${{ env.TARGET }} PRECOMPILE=1
    #     cmake -P source/scripts/cmake/win_pkg_cleanup.cmake

    # - name: use python windows embeddable package for runtime
    #   if: ${{ inputs.runtime == 'downloaded windows embeddable package' }}
    #   run: |
    #     make ${{ env.TARGET }}
    #     python source/scripts/buildpy.py -e

    # - name: pre-upload
    #   run: mv source/docs/_book/Python3-Externals-for-Max-MSP.pdf ./userguide.pdf

    - name: set run variables
      id: myvars
      run: |
        PROCESS_OUTPUT=$(python source/scripts/record.py -p ${{ env.TARGET }})
        echo "pkg=${PROCESS_OUTPUT}" >> $GITHUB_OUTPUT

    - name: set run variables
      run: echo "${{ steps.myvars.outputs.pkg }}"

    # - uses: actions/upload-artifact@v4
    #   with:
    #     # name: pyjs-${{ env.TARGET }}-${{ github.RUNNER_ARCH }}-externals
    #     name: ${{ steps.vars.outputs.pkg }}
    #     path: |
    #         docs/py.maxref.xml
    #         docs/pyjs.maxref.xml
    #         externals
    #         help/py.maxhelp
    #         help/pyjs.maxhelp
    #         examples
    #         javascript
    #         jsextensions
    #         patchers
    #         support
    #         LICENSE
    #         README.md
    #         userguide.pdf
