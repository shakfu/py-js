name: pyjs-builder

on:
  workflow_dispatch:
    inputs:
      variant:
        type: choice
        description: Please select a build variant
        default: shared-pkg
        required: true
        options: 
          - framework-ext
          - framework-pkg
          - shared-ext
          - shared-tiny-ext
          - static-ext
          - static-tiny-ext
          - relocatable-pkg
      py_version:
        type: choice
        description: Please select a python version
        default: '3.13'
        required: true
        options:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'

env:
  arch: darwin-x86
  DEV_ID: ${{ secrets.DEV_ID }}

jobs:
  build:
    runs-on: macos-latest
    # runs-on: macos-11 # requires changes

    steps:

    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7

    - name: Cache downloads
      id: cache-downloads
      uses: actions/cache@v3
      env:
        cache-name: pyjs-cache-1
      with:
        path: |
          source/projects/py/targets/build/downloads
          source/projects/py/targets/build/lib/bzip2
          source/projects/py/targets/build/lib/openssl
          source/projects/py/targets/build/lib/xz
        key: $${{ env.cache-name }}-${{ hashFiles('source/projects/py/resources/pyjs-dependencies.txt') }}

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ github.event.inputs.py_version }}
        cache: 'pip' # caching pip dependencies

    - name: install python requirements
      run: pip install -r requirements.txt

    - name: Display python version
      run: python3 --version

    - name: Import development certificate
      uses: apple-actions/import-codesign-certs@v2
      with: 
        p12-file-base64: ${{ secrets.MACOS_DEV_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_DEV_PWD }}

    - name: Build externals
      run: make ${{ github.event.inputs.variant }}

    - name: Sign externals and any frameworks in support folder
      run: make sign

    - name: Create package, convert it to a .dmg
      run: make dmg PKG_NAME=${{ github.event.inputs.variant }}

    - name: Sign .dmg
      run: make sign-dmg

    # - name: Notarize dmg
    #   uses: lando/notarize-action@v2.0.2
    #   with:
    #     product-path: "${{ env.PRODUCT_DMG }}"
    #     appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
    #     appstore-connect-password: ${{ secrets.NOTARIZATION_PWD }}
    #     appstore-connect-team-id: ${{ secrets.DEV_ID }}

    - name: Notarize Release Build
      uses: BoundfoxStudios/action-xcode-notarize@v1
      with:
        product-path: "${{ env.PRODUCT_DMG }}"
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PWD }}

    - name: Staple dmg
      uses: BoundfoxStudios/action-xcode-staple@v1
      with:
        product-path: "${{ env.PRODUCT_DMG }}"

    # - uses: ncipollo/release-action@v1.7.1
    #   with:
    #     artifacts: ${{ github.event.repository.name }}-${{ github.event.inputs.variant }}-${{ env.arch }}-${{ github.event.inputs.py_version }}-${{ steps.short-sha.outputs.sha }}.zip
    #     body: "PyJS Max Package"
    #     token: ${{ secrets.GITHUB_TOKEN }}
