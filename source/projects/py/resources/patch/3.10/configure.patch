8093c8093
< ieeefp.h io.h langinfo.h libintl.h process.h pthread.h \
---
> ieeefp.h io.h langinfo.h process.h pthread.h \
10341,10352d10340
< 
< 
< # check if we need libintl for locale functions
< { $as_echo "$as_me:${as_lineno-$LINENO}: checking for textdomain in -lintl" >&5
< $as_echo_n "checking for textdomain in -lintl... " >&6; }
< if ${ac_cv_lib_intl_textdomain+:} false; then :
<   $as_echo_n "(cached) " >&6
< else
<   ac_check_lib_save_LIBS=$LIBS
< LIBS="-lintl  $LIBS"
< cat confdefs.h - <<_ACEOF >conftest.$ac_ext
< /* end confdefs.h.  */
10354,10380d10341
< /* Override any GCC internal prototype to avoid an error.
<    Use char because int might match the return type of a GCC
<    builtin and then its argument prototype would still apply.  */
< #ifdef __cplusplus
< extern "C"
< #endif
< char textdomain ();
< int
< main ()
< {
< return textdomain ();
<   ;
<   return 0;
< }
< _ACEOF
< if ac_fn_c_try_link "$LINENO"; then :
<   ac_cv_lib_intl_textdomain=yes
< else
<   ac_cv_lib_intl_textdomain=no
< fi
< rm -f core conftest.err conftest.$ac_objext \
<     conftest$ac_exeext conftest.$ac_ext
< LIBS=$ac_check_lib_save_LIBS
< fi
< { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_intl_textdomain" >&5
< $as_echo "$ac_cv_lib_intl_textdomain" >&6; }
< if test "x$ac_cv_lib_intl_textdomain" = xyes; then :
10382d10342
< $as_echo "#define WITH_LIBINTL 1" >>confdefs.h
10384,10385d10343
<         LIBS="-lintl $LIBS"
< fi
